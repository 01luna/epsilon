#!/bin/bash

# Called by "git push" after it has checked the remote status,
# but before anything has been pushed.
#
# If this script exits with a non-zero status nothing will be pushed.
#
# Set up (all commands are run from root epsilon folder):
# 1. Copy this file into your repo in the folder `.git/hooks`:
#     `cp build/git/pre-push .git/hooks/pre-push`
# 2. Set executable permissions:
#     `chmod +x .git/hooks/pre-push`
# 3. Re-init your git:
#     `git init`
#
# Try a force push to master, you should get a confirmation message.
#
# This prevents you from doing the following commands without confirmation:
# `git push --force origin master`
# `git push --delete origin master`
# `git push origin xxxxx:master`
#
# Sources:
#  https://gist.github.com/ColCh/9d48693276aac50cac37a9fce23f9bda
#  https://gist.github.com/pixelhandler/5718585

protected_branch='master'

if read local_ref local_sha remote_ref remote_sha; then
    if [[ "$remote_ref" == *"$protected_branch"* ]]; then
        echo -en "\033[1;33mYou're about to push to $protected_branch, is that what you intended? [y|n] \033[0m"
        echo -en "\033[1m"
        read -n 1 -r < /dev/tty
        echo -en "\033[0m"

        echo
        if echo $REPLY | grep -E '^[Yy]$' > /dev/null; then
            exit 0 # push will execute
        fi
        exit 1 # push will not execute
    fi
fi
